#!/bin/bash -e

# install all the config files from $SNAP/config into $SNAP_DATA/config
# TODO: all the other config files for the security services need to be 
# handled specially, as seen below, but we could add the other services' 
# config files here too
for configFile in security-gateway-api.toml; do
    if [ ! -f "${SNAP_DATA}/config/${configFile}" ]; then
        mkdir -p ${SNAP_DATA}/config
        cp ${SNAP}/config/${configFile} ${SNAP_DATA}/config/${configFile}
    fi
done

# for the pki setup files, we replace the password at install time with a psuedorandomly generated password from openssl
# this isn't 100% secure, but it's unlikely that people will change the default password on initial install
# and so generating a unique one at install time ensures that all snap installs don't suffer from a 
# default password vulnerability for the certificates
# additionally this file is installed into $SNAP_DATA with only owner read attributes, so the password can only be read by root
for tlsEnvFile in pki-setup-config-kong.env pki-setup-config-vault.env; do
    if [ ! -f "${SNAP_DATA}/config/${tlsEnvFile}" ]; then
        mkdir -p ${SNAP_DATA}/config
        newpw=$(openssl rand -base64 32)
        sed "s@PKCS12_PASSWORD=\"REPLACE_ME_IN_INSTALL_HOOK\"@PKCS12_PASSWORD=\"$newpw\"@g" $SNAP/config/${tlsEnvFile} > ${SNAP_DATA}/config/${tlsEnvFile}
        chmod 600 ${SNAP_DATA}/config/${tlsEnvFile}
    fi
done

# ensure vault setup directories exist
for dir in vault vault/config vault/pki; do
    if [ ! -d "${SNAP_DATA}/$dir" ]; then
        mkdir -p "${SNAP_DATA}/$dir"
    fi
done

# the vault config needs to be generated with sed, replacing $SNAP_DATA in the file 
# with the actual absolute directory
# note that if anyone ever somehow has a "@" in their $SNAP_DATA this will likely break :-/
if [ ! -f "${SNAP_DATA}/config/vault-config.json" ]; then
    mkdir -p ${SNAP_DATA}/config
    sed "s@\$SNAP_DATA@$SNAP_DATA@g" ${SNAP}/config/vault-config.json.in > ${SNAP_DATA}/config/vault-config.json
fi

# the kong config file needs to be generated - it needs absolute paths, but we specify $SNAP_DATA 
# in the config file, so we just perform that replacement now
# see note above about usage of "@" here
if [ ! -f ${SNAP_DATA}/config/kong.conf ]; then
    sed "s@\$SNAP_DATA@$SNAP_DATA@g" ${SNAP}/config/kong.conf.in > ${SNAP_DATA}/config/kong.conf
fi
