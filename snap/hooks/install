#!/bin/bash -e

# install all the config files from $SNAP/config/SERVICE/res/configuration.toml 
# into $SNAP_DATA/config
mkdir -p ${SNAP_DATA}/config
for service in security-gateway-api core-command core-config-seed-go core-data core-metadata export-client export-distro support-logging; do
    if [ ! -f "${SNAP_DATA}/config/${service}/res/configuration.toml" ]; then
        mkdir -p "${SNAP_DATA}/config/${service}/res"
        cp ${SNAP}/config/${service}/res/configuration.toml "${SNAP_DATA}/config/${service}/res/configuration.toml"
    fi
done

# special handling for additional core-config-seed-go config toml files
for configType in "edgex-core-command;go" "edgex-core-data;go" "edgex-core-metadata;go" "edgex-support-logging;go"; do
    if [ ! -f "${SNAP_DATA}/config/core-config-seed-go/config/${configType}/configuration.toml" ]; then
        mkdir -p "${SNAP_DATA}/config/core-config-seed-go/config/${configType}"
        cp "${SNAP}/config/core-config-seed-go/config/${configType}/configuration.toml" "${SNAP_DATA}/config/core-config-seed-go/config/${configType}/configuration.toml"
    fi
done

# also handle core-config-seed-go/device-virtual/application.properties
if [ ! -f "${SNAP_DATA}/config/core-config-seed-go/config/device-virtual/application.properties" ]; then
    mkdir -p "${SNAP_DATA}/config/core-config-seed-go/config/device-virtual"
    cp "${SNAP}/config/core-config-seed-go/config/device-virtual/application.properties" "${SNAP_DATA}/config/core-config-seed-go/config/device-virtual/application.properties"
fi

# lastly handle the banner.txt for core-config-seed-go
if [ ! -f "${SNAP_DATA}/config/core-config-seed-go/res/banner.txt" ]; then
    mkdir -p "${SNAP_DATA}/config/core-config-seed-go/res"
    cp "${SNAP}/config/core-config-seed-go/res/banner.txt" "${SNAP_DATA}/config/core-config-seed-go/res/banner.txt"
fi

# for the pki setup files from security services, we replace the password at install time with a psuedorandomly generated password from openssl
# this isn't 100% secure, but it's unlikely that people will change the default password on initial install
# and so generating a unique one at install time ensures that all snap installs don't suffer from a 
# default password vulnerability for the certificates
# additionally this file is installed into $SNAP_DATA with only owner read attributes, so the password can only be read by root
for tlsEnvFile in pki-setup-config-kong.env pki-setup-config-vault.env; do
    if [ ! -f "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}" ]; then
        mkdir -p ${SNAP_DATA}/config/security-secret-store
        newpw=$(openssl rand -base64 32)
        sed "s@PKCS12_PASSWORD=\"REPLACE_ME_IN_INSTALL_HOOK\"@PKCS12_PASSWORD=\"$newpw\"@g" ${SNAP}/config/security-secret-store/${tlsEnvFile} > "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"
        chmod 600 "${SNAP_DATA}/config/security-secret-store/${tlsEnvFile}"
    fi
done

# ensure vault setup directories exist
for dir in vault vault/pki vault/file; do
    if [ ! -d "${SNAP_DATA}/$dir" ]; then
        mkdir -p "${SNAP_DATA}/$dir"
    fi
done

# the vault config needs to be generated with sed, replacing $SNAP_DATA in the file 
# with the actual absolute directory
# note that if anyone ever somehow has a "@" in their $SNAP_DATA this will likely break :-/
if [ ! -f "${SNAP_DATA}/config/security-secret-store/vault-config.json" ]; then
    mkdir -p ${SNAP_DATA}/config/security-secret-store
    sed "s@\$SNAP_DATA@$SNAP_DATA@g" ${SNAP}/config/security-secret-store/vault-config.json.in > ${SNAP_DATA}/config/security-secret-store/vault-config.json
    chmod 644 ${SNAP_DATA}/config/security-secret-store/vault-config.json
fi

# the kong config file needs to be generated - it needs absolute paths, but we specify $SNAP_DATA 
# in the config file, so we just perform that replacement now
# see note above about usage of "@" here
if [ ! -f ${SNAP_DATA}/config/security-gateway-api/kong.conf ]; then
    sed "s@\$SNAP_DATA@$SNAP_DATA@g" ${SNAP}/config/security-gateway-api/kong.conf.in > ${SNAP_DATA}/config/security-gateway-api/kong.conf
fi
